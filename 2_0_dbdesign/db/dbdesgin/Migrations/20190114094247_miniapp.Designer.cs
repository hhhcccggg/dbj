// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dbdesgin.Data;

namespace dbdesgin.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190114094247_miniapp")]
    partial class miniapp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("db.shop.Models.o2o.OfflineStoreExtraService", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<long>("extraServiceId");

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("notes")
                        .HasMaxLength(1024);

                    b.Property<int>("status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<long>("storeId");

                    b.HasKey("Id");

                    b.ToTable("o2o_offlineStoreExtraServices");
                });

            modelBuilder.Entity("db.shop.Models.o2o.OfflineStoreOpeningHour", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<int>("closeTime");

                    b.Property<int>("day");

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int>("openTime");

                    b.Property<long>("storeId");

                    b.HasKey("Id");

                    b.ToTable("o2o_offlineStoreOpeningHours");
                });

            modelBuilder.Entity("db.shop.Models.o2o.OfflineStoreServiceScope", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("notes")
                        .HasMaxLength(1024);

                    b.Property<long>("serviceScopeId");

                    b.Property<int>("status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<long>("storeId");

                    b.HasKey("Id");

                    b.ToTable("o2o_offlineStoreServiceScopes");
                });

            modelBuilder.Entity("db.shop.Models.o2o.OfflineStoreStaff", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("storeId");

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.ToTable("o2o_offlineStoreStaffs");
                });

            modelBuilder.Entity("db.shop.Models.shop.DeliveryTemplate", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<int>("billType")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<long>("deliveryTemplateScopeId");

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("legalSubjectId");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<long>("storeId");

                    b.HasKey("Id");

                    b.ToTable("shop_deliveryTemplates");
                });

            modelBuilder.Entity("db.shop.Models.shop.DeliveryTemplateScope", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("deliveryArea")
                        .IsRequired();

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int>("item")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<int>("itemPrice")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<int>("overItem")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<int>("overItemPrice")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.ToTable("shop_deliveryTemplateScopes");
                });

            modelBuilder.Entity("db.shop.Models.shop.DiscountCoupon", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<int>("couponCount");

                    b.Property<string>("discountType")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<int>("discountValue");

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long?>("legalSubjectId");

                    b.Property<int>("limitGetPerPerson");

                    b.Property<int>("limitMoney");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("onlySupportOriginProduct");

                    b.Property<long?>("storeId");

                    b.Property<string>("useInfo");

                    b.Property<DateTime?>("validEndTime")
                        .HasColumnName("validEndTime")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("validStartTime")
                        .HasColumnName("validStartTime")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("shop_discountCoupons");
                });

            modelBuilder.Entity("db.shop.Models.shop.Favorite", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("imageUrl")
                        .IsRequired()
                        .HasMaxLength(1024);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int>("price");

                    b.Property<long>("targetId");

                    b.Property<string>("targetType")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(1024);

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.ToTable("shop_Favorites");
                });

            modelBuilder.Entity("db.shop.Models.shop.LegalSubject", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<int>("cityId");

                    b.Property<string>("cityLevel")
                        .HasMaxLength(512);

                    b.Property<string>("contactAddress")
                        .HasMaxLength(1024);

                    b.Property<string>("contactName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("contactPhone")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("corpId")
                        .HasMaxLength(512);

                    b.Property<string>("description")
                        .HasMaxLength(2048);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("leagalRepresentativeID")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<string>("leagalRepresentativeName")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("logoUrl")
                        .HasMaxLength(512);

                    b.Property<string>("marketName")
                        .HasMaxLength(128);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("qq")
                        .HasMaxLength(50);

                    b.Property<string>("regAddress");

                    b.Property<string>("reviewMsg")
                        .HasMaxLength(2048);

                    b.Property<bool>("reviewed")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int>("status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<string>("subName")
                        .HasMaxLength(128);

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("wechat")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("shop_legalSubjects");
                });

            modelBuilder.Entity("db.shop.Models.shop.LegalSubjectAsset", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("legalSubjectId");

                    b.Property<long>("lockedBalance");

                    b.Property<long>("remainBalance");

                    b.HasKey("Id");

                    b.ToTable("shop_legalSubjectAssets");
                });

            modelBuilder.Entity("db.shop.Models.shop.LegalSubjectAssetDetail", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<long>("changeBalance");

                    b.Property<long>("currentBalance");

                    b.Property<string>("extraData");

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("legalSubjectId");

                    b.Property<string>("notes")
                        .HasMaxLength(1024);

                    b.Property<long?>("orderId");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<string>("type")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasDefaultValue("SHOP");

                    b.HasKey("Id");

                    b.ToTable("shop_legalSubjectAssetDetails");
                });

            modelBuilder.Entity("db.shop.Models.shop.LegalSubjectReview", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("identifyId")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("keyId")
                        .HasMaxLength(1024);

                    b.Property<long>("legalSubjectId");

                    b.Property<string>("rejectMsg")
                        .HasMaxLength(512);

                    b.Property<string>("reviewData")
                        .IsRequired();

                    b.Property<int>("status");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("identifyId");

                    b.ToTable("shop_legalSubjectReviews");
                });

            modelBuilder.Entity("db.shop.Models.shop.Product", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<long>("brandId");

                    b.Property<long>("categoryId");

                    b.Property<string>("categoryLevel")
                        .HasMaxLength(1024);

                    b.Property<long>("commentCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<long>("deliverytemplateId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<string>("detailDescription");

                    b.Property<int>("grade")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("imageUrls");

                    b.Property<long>("inventory")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("joinMemberDiscount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int>("limitPerPerson")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("marketName")
                        .HasMaxLength(512);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<bool>("needDelivery")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("notes")
                        .HasMaxLength(512);

                    b.Property<string>("numberId")
                        .HasMaxLength(128);

                    b.Property<int>("priceDown")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<int>("priceUp")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("productDetailType")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<long>("productGroupId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<int>("productType")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<bool>("publish")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("sales")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<string>("searchName")
                        .HasMaxLength(512);

                    b.Property<string>("sellerPoint")
                        .HasMaxLength(512);

                    b.Property<string>("shareDesc")
                        .HasMaxLength(512);

                    b.Property<long>("specifyPublishTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<long>("storeId");

                    b.Property<string>("subName")
                        .HasMaxLength(512);

                    b.Property<bool>("supportCoin")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int>("universalDeliveryPrice")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(10);

                    b.Property<string>("videoUrl")
                        .HasMaxLength(1024);

                    b.Property<int>("weight")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("shop_products");
                });

            modelBuilder.Entity("db.shop.Models.shop.ProductAttri", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<long>("categoryId");

                    b.Property<long>("groupId");

                    b.Property<string>("identifyId")
                        .HasMaxLength(30);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<long>("parentId");

                    b.HasKey("Id");

                    b.ToTable("shop_productAttris");
                });

            modelBuilder.Entity("db.shop.Models.shop.ProductAttriLink", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<long>("attriId");

                    b.Property<long>("attriValueId");

                    b.Property<string>("extraData");

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("productId");

                    b.HasKey("Id");

                    b.ToTable("shop_productAttriLinks");
                });

            modelBuilder.Entity("db.shop.Models.shop.ProductAttriValue", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("attiValue")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("productAttriId");

                    b.HasKey("Id");

                    b.ToTable("shop_productAttriValues");
                });

            modelBuilder.Entity("db.shop.Models.shop.ProductBrand", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("description")
                        .HasMaxLength(1024);

                    b.Property<string>("imageUrl")
                        .HasMaxLength(512);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("orderIndex")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("shop_productBrands");
                });

            modelBuilder.Entity("db.shop.Models.shop.ProductCard", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<bool>("festivalCanUse")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("productId");

                    b.Property<long?>("productSKUId");

                    b.Property<int>("specHoursValid");

                    b.Property<string>("useInfo")
                        .HasMaxLength(1024);

                    b.Property<int>("validDays");

                    b.Property<DateTime?>("validEndTime")
                        .HasColumnName("validEndTime")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("validStartTime")
                        .HasColumnName("validStartTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("validType")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("shop_productCards");
                });

            modelBuilder.Entity("db.shop.Models.shop.ProductCart", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<long>("expireTime");

                    b.Property<string>("ip")
                        .HasMaxLength(50);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int>("item");

                    b.Property<int>("price");

                    b.Property<long>("productId");

                    b.Property<long>("productskuId");

                    b.Property<long>("storeId");

                    b.Property<string>("ua")
                        .HasMaxLength(128);

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.ToTable("shop_productCarts");
                });

            modelBuilder.Entity("db.shop.Models.shop.ProductCashCoupon", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<int>("couponValue");

                    b.Property<bool>("festivalCanUse")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("productId");

                    b.Property<long?>("productSKUId");

                    b.Property<int>("specHoursValid");

                    b.Property<string>("useInfo")
                        .HasMaxLength(1024);

                    b.Property<int>("validDays");

                    b.Property<DateTime?>("validEndTime")
                        .HasColumnName("validEndTime")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("validStartTime")
                        .HasColumnName("validStartTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("validType")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("shop_productCashCoupons");
                });

            modelBuilder.Entity("db.shop.Models.shop.ProductOrder", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<int>("actualPayment");

                    b.Property<string>("buyerComment")
                        .HasMaxLength(512);

                    b.Property<bool>("buyerRate");

                    b.Property<DateTime?>("closeTime")
                        .HasColumnName("closeTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("couponids")
                        .HasMaxLength(1024);

                    b.Property<string>("deliveryCode")
                        .HasMaxLength(128);

                    b.Property<int>("deliveryFee");

                    b.Property<string>("deliveryName")
                        .HasMaxLength(128);

                    b.Property<DateTime?>("deliveryTime")
                        .HasColumnName("deliveryTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("deliveryType")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("endTime")
                        .HasColumnName("endTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("orderNo")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<int>("payment");

                    b.Property<DateTime?>("paymentTime")
                        .HasColumnName("paymentTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("paymentType")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<long>("receiveAddressId");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<long>("storeId");

                    b.Property<string>("thirdPaymentTradeNo")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<string>("thirdPaymentTradeNotes");

                    b.Property<DateTime?>("updateTime")
                        .HasColumnName("updateTime")
                        .HasColumnType("timestamp");

                    b.Property<int>("useCoin")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.HasIndex("status");

                    b.ToTable("shop_productOrders");
                });

            modelBuilder.Entity("db.shop.Models.shop.ProductOrderItem", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int>("num");

                    b.Property<long>("orderId");

                    b.Property<int>("price");

                    b.Property<long>("productId");

                    b.Property<long>("productskuId");

                    b.Property<string>("title")
                        .HasMaxLength(512);

                    b.Property<int>("totalFee");

                    b.HasKey("Id");

                    b.ToTable("shop_productOrderItems");
                });

            modelBuilder.Entity("db.shop.Models.shop.ProductSKU", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("attrs");

                    b.Property<int>("inventory");

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int>("originalPrice");

                    b.Property<long>("productId");

                    b.Property<int>("promotionPrice");

                    b.Property<long>("sales")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<string>("skuNumber")
                        .HasMaxLength(128);

                    b.Property<int>("weight");

                    b.HasKey("Id");

                    b.ToTable("shop_productSKUs");
                });

            modelBuilder.Entity("db.shop.Models.shop.ReceiveAddress", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<long>("cityId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<string>("cityLevel")
                        .HasMaxLength(512);

                    b.Property<bool>("defaultAddr")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("receiverAddress")
                        .HasMaxLength(512);

                    b.Property<string>("receiverCity")
                        .HasMaxLength(50);

                    b.Property<string>("receiverCountry")
                        .HasMaxLength(50);

                    b.Property<string>("receiverMobile")
                        .HasMaxLength(50);

                    b.Property<string>("receiverName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("receiverPhone")
                        .HasMaxLength(50);

                    b.Property<string>("receiverZip")
                        .HasMaxLength(20);

                    b.Property<string>("reveiverState")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("updateTime")
                        .HasColumnName("updateTime")
                        .HasColumnType("timestamp");

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.ToTable("shop_receiveAddresses");
                });

            modelBuilder.Entity("db.shop.Models.shop.Store", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("address")
                        .HasMaxLength(512);

                    b.Property<long>("categoryId");

                    b.Property<string>("categoryLevel");

                    b.Property<int>("cityId");

                    b.Property<string>("cityLevel")
                        .HasMaxLength(512);

                    b.Property<string>("contactName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("contactPhone")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("coverImages")
                        .HasMaxLength(1024);

                    b.Property<string>("description")
                        .HasMaxLength(2048);

                    b.Property<DateTime>("expireTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("expireTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<int>("grade")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<float>("latitude")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0f);

                    b.Property<long>("legalSubjectId");

                    b.Property<int>("level")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("logoUrl")
                        .HasMaxLength(512);

                    b.Property<float>("longitude")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0f);

                    b.Property<string>("mainConverImage")
                        .HasMaxLength(128);

                    b.Property<string>("marketName")
                        .HasMaxLength(128);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("qq")
                        .HasMaxLength(20);

                    b.Property<long>("recommendIndex")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<bool>("reviewed")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("shareDesc")
                        .HasMaxLength(512);

                    b.Property<int>("status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<bool>("stopService")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("storeNumber")
                        .HasMaxLength(128);

                    b.Property<string>("subName")
                        .HasMaxLength(128);

                    b.Property<string>("type")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasDefaultValue("0");

                    b.HasKey("Id");

                    b.ToTable("shop_stores");
                });

            modelBuilder.Entity("db.shop.Models.shop.UserDiscountCoupon", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<long>("couponId");

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("state")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.ToTable("shop_userDiscountCoupons");
                });

            modelBuilder.Entity("db.video.Models.AdBanner", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("imageUrl")
                        .IsRequired()
                        .HasMaxLength(1024);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("platform")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("refUrl")
                        .HasMaxLength(2048);

                    b.Property<string>("state")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("core_adBanners");
                });

            modelBuilder.Entity("db.video.Models.City", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<string>("citycode")
                        .HasMaxLength(128);

                    b.Property<float>("latitude");

                    b.Property<string>("level")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<float>("longitude");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<long>("parentId");

                    b.Property<string>("zipcode")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("core_cities");
                });

            modelBuilder.Entity("db.video.Models.Task", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<int>("coins");

                    b.Property<string>("desc")
                        .HasMaxLength(1024);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("core_tasks");
                });

            modelBuilder.Entity("db.video.Models.Tenant", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("identifyName")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("legalSubjectId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("identifyName");

                    b.ToTable("core_user_tenants");
                });

            modelBuilder.Entity("db.video.Models.UserInvitation", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<long>("initiatorUserId");

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("message")
                        .HasMaxLength(512);

                    b.Property<long?>("receivedUserId");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("core_userInvitations");
                });

            modelBuilder.Entity("db.video.Models.UserTask", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<int>("coins");

                    b.Property<string>("desc")
                        .HasMaxLength(1024);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("state")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("taskId")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.ToTable("core_userTasks");
                });

            modelBuilder.Entity("dbdesgin.Models.AppVersion", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("description")
                        .HasMaxLength(1024);

                    b.Property<string>("downloadUrl")
                        .HasMaxLength(512);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int>("platform");

                    b.Property<string>("title")
                        .HasMaxLength(50);

                    b.Property<int>("upgradeType")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("version")
                        .HasMaxLength(30);

                    b.Property<int>("versionNum");

                    b.HasKey("Id");

                    b.ToTable("core_appVersions");
                });

            modelBuilder.Entity("dbdesgin.Models.BuyCoinConfig", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<int>("coins");

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int>("orderIndex")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("productId")
                        .HasMaxLength(128);

                    b.Property<int>("rmbs");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("type")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasDefaultValue("ANDROID");

                    b.HasKey("Id");

                    b.ToTable("core_basic_buyCoinConfigs");
                });

            modelBuilder.Entity("dbdesgin.Models.Category", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("iconUrl")
                        .HasMaxLength(512);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("orderIndex");

                    b.Property<long>("parentId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<int>("status");

                    b.Property<int>("type")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<long?>("userId");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("core_categories");
                });

            modelBuilder.Entity("dbdesgin.Models.Comment", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("contentTxt")
                        .IsRequired()
                        .HasMaxLength(1024);

                    b.Property<long>("heartCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isOwner")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("originContentTxt")
                        .HasMaxLength(1024);

                    b.Property<float>("rate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0f);

                    b.Property<long>("refCommentId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<long>("resourceOwnerId");

                    b.Property<int>("resourceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("reviewStatus")
                        .HasMaxLength(20);

                    b.Property<string>("reviewedResult")
                        .HasMaxLength(1024);

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.ToTable("core_comments");
                });

            modelBuilder.Entity("dbdesgin.Models.CommentExtraData", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<long>("commentId");

                    b.Property<string>("dataContent");

                    b.Property<long>("dataId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("type")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasDefaultValue("VIDEO");

                    b.HasKey("Id");

                    b.ToTable("core_comment_extraDatas");
                });

            modelBuilder.Entity("dbdesgin.Models.Complain", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("description")
                        .HasMaxLength(512);

                    b.Property<int>("fromTypeId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<long>("fromUserId");

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("reasonId");

                    b.Property<string>("snapshotUrl")
                        .HasMaxLength(512);

                    b.Property<long>("toResId");

                    b.Property<long>("toResTypeId");

                    b.HasKey("Id");

                    b.ToTable("core_complains");
                });

            modelBuilder.Entity("dbdesgin.Models.ComplainReason", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<string>("description")
                        .HasMaxLength(512);

                    b.Property<bool>("isOpen")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("title")
                        .HasMaxLength(256);

                    b.Property<int>("type");

                    b.HasKey("Id");

                    b.ToTable("core_complainReasons");
                });

            modelBuilder.Entity("dbdesgin.Models.DailyIncreaseAnalysis", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("newOrders")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<long>("newUsers")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<long>("newVideos")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<long>("perDau")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<long>("perMau")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<string>("type")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasDefaultValue("FAKE");

                    b.HasKey("Id");

                    b.ToTable("core_dailyIncreaseAnalysises");
                });

            modelBuilder.Entity("dbdesgin.Models.EnCashMentDetail", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<int>("coins");

                    b.Property<string>("extraData");

                    b.Property<bool>("isAllowedEnCash")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("payAccountId");

                    b.Property<string>("payAccountType")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("resultReason")
                        .HasMaxLength(512);

                    b.Property<int>("rmbs");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("tradeNo");

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.HasIndex("tradeNo");

                    b.HasIndex("userId");

                    b.ToTable("core_enCashMentDetails");
                });

            modelBuilder.Entity("dbdesgin.Models.EnCashPayAccount", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("accessToken")
                        .HasMaxLength(1024);

                    b.Property<string>("avatarUrl")
                        .HasMaxLength(512);

                    b.Property<long>("expireIn");

                    b.Property<bool>("isLocked")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("uniqueId")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("core_enCashAccounts");
                });

            modelBuilder.Entity("dbdesgin.Models.Follower", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<long>("followerUserId");

                    b.Property<bool>("isBoth")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.HasIndex("followerUserId");

                    b.HasIndex("userId");

                    b.ToTable("core_followers");
                });

            modelBuilder.Entity("dbdesgin.Models.Heart", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("resourceOwnerId");

                    b.Property<int>("resourceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.ToTable("core_hearts");
                });

            modelBuilder.Entity("dbdesgin.Models.Living", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("address")
                        .HasMaxLength(512);

                    b.Property<string>("chatRoomId")
                        .HasMaxLength(512);

                    b.Property<long>("commentCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<int>("complainCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("coverUrl")
                        .HasMaxLength(512);

                    b.Property<long>("getCoins")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<long>("getFriends")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<long>("heartCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<string>("hlsUrl")
                        .HasMaxLength(512);

                    b.Property<bool>("isLiving")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<float?>("latitude");

                    b.Property<string>("linkPets");

                    b.Property<int>("linkProductCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<long>("liveingTotalTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<float?>("longitude");

                    b.Property<long>("onlinePeopleCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<long>("playCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<string>("pullUrl")
                        .HasMaxLength(512);

                    b.Property<string>("pushUrl")
                        .HasMaxLength(512);

                    b.Property<int>("recommendIndex")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("rejectMsg")
                        .HasMaxLength(512);

                    b.Property<long>("shareCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<int>("status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.ToTable("core_livings");
                });

            modelBuilder.Entity("dbdesgin.Models.Message", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<long>("creatorUserId");

                    b.Property<string>("dataContent")
                        .HasMaxLength(2048);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int>("messageType")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("msgContent")
                        .IsRequired()
                        .HasMaxLength(1024);

                    b.Property<string>("refUrl")
                        .HasMaxLength(1024);

                    b.HasKey("Id");

                    b.ToTable("core_messages");
                });

            modelBuilder.Entity("dbdesgin.Models.MessageBroadcast", b =>
                {
                    b.Property<long>("receivedUserId")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("lastMessageId");

                    b.HasKey("receivedUserId");

                    b.ToTable("core_messageBroadcasts");
                });

            modelBuilder.Entity("dbdesgin.Models.MessageDispatch", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("receivedUserId");

                    b.Property<long>("refMessageId");

                    b.Property<int>("status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("core_messageDispatchs");
                });

            modelBuilder.Entity("dbdesgin.Models.Music", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("artist")
                        .HasMaxLength(30);

                    b.Property<long?>("categoryId");

                    b.Property<string>("coverUrl")
                        .HasMaxLength(512);

                    b.Property<long?>("creatorUserId");

                    b.Property<float?>("duration");

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("musicUrl")
                        .HasMaxLength(512);

                    b.Property<int>("recommendIndex")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("core_musics");
                });

            modelBuilder.Entity("dbdesgin.Models.Permission", b =>
                {
                    b.Property<string>("name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasDefaultValue("");

                    b.HasKey("name");

                    b.ToTable("core_permissions");
                });

            modelBuilder.Entity("dbdesgin.Models.Pet", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("avatar")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<DateTime>("birthday")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<long>("categoryId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("nickName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("sex")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("core_pets");
                });

            modelBuilder.Entity("dbdesgin.Models.ResourceNeedReview", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<long>("dataId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<int>("dataType")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("resContent")
                        .HasMaxLength(512);

                    b.Property<int>("resType")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("reviewResultContent")
                        .HasMaxLength(1024);

                    b.Property<string>("reviewResultType")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("core_resourceNeedReviews");
                });

            modelBuilder.Entity("dbdesgin.Models.ResourceRefGoods", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("goods")
                        .HasMaxLength(1024);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("resourceId");

                    b.Property<int>("resourceType")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("core_resourceRefGoods");
                });

            modelBuilder.Entity("dbdesgin.Models.Role", b =>
                {
                    b.Property<string>("name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasDefaultValue("");

                    b.Property<long?>("tenantId");

                    b.HasKey("name");

                    b.ToTable("core_roles");
                });

            modelBuilder.Entity("dbdesgin.Models.RolePermission", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<string>("permissionName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long?>("tenantId");

                    b.HasKey("Id");

                    b.ToTable("core_rolePermissions");
                });

            modelBuilder.Entity("dbdesgin.Models.Tag", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("desc")
                        .HasMaxLength(1024);

                    b.Property<bool>("isHot")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("recommendIndex")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<long>("resNumber")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.HasKey("Id");

                    b.ToTable("core_tags");
                });

            modelBuilder.Entity("dbdesgin.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsEmailVerification")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isEmailVerification")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsLocked")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isLocked")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsPhoneVerification")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isPhoneVerification")
                        .HasDefaultValue(false);

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasMaxLength(512);

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasMaxLength(20);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasMaxLength(110);

                    b.Property<string>("address")
                        .HasMaxLength(512);

                    b.Property<string>("avatarUrl")
                        .HasMaxLength(512);

                    b.Property<DateTime?>("birthday")
                        .HasColumnName("birthday")
                        .HasColumnType("timestamp");

                    b.Property<int>("complainCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("hxPwd")
                        .HasMaxLength(512);

                    b.Property<string>("hxUserName")
                        .HasMaxLength(50);

                    b.Property<bool>("isLiving")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isLivingOpen")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isLivingWatch")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isManager")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isReviewed")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isSuper")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<float?>("latitude");

                    b.Property<long>("livingId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<int>("loginType")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<float?>("longitude");

                    b.Property<int>("loveStatusId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("nickName")
                        .HasMaxLength(20);

                    b.Property<int>("occupationId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<long?>("recommendUserId");

                    b.Property<int>("sex")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<long?>("tenantId");

                    b.Property<string>("thirdOpenId")
                        .HasMaxLength(1024);

                    b.Property<long>("totalFans")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<long>("totalHearts")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<long>("totalMyFocuses")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("core_users");
                });

            modelBuilder.Entity("dbdesgin.Models.UserAsset", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<long>("coins");

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("remainBalance");

                    b.Property<long>("totalCoins")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("core_userAssets");
                });

            modelBuilder.Entity("dbdesgin.Models.UserCoinDetail", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("extraData");

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int>("num");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("statusMsg")
                        .HasMaxLength(1024);

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<string>("tradeNo")
                        .HasMaxLength(128);

                    b.Property<string>("tradeType")
                        .HasMaxLength(50);

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.HasIndex("tradeNo");

                    b.HasIndex("userId");

                    b.ToTable("core_userCoinDetails");
                });

            modelBuilder.Entity("dbdesgin.Models.UserCoinType", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<long>("coins");

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("lockedCoins")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("core_userCoinTypes");
                });

            modelBuilder.Entity("dbdesgin.Models.UserDeviceToken", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("deviceName")
                        .HasMaxLength(50);

                    b.Property<string>("deviceToken")
                        .HasMaxLength(512);

                    b.Property<string>("deviceType")
                        .HasMaxLength(20);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("userId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.HasKey("Id");

                    b.ToTable("core_userDeviceTokens");
                });

            modelBuilder.Entity("dbdesgin.Models.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long?>("tenantId");

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("core_userRoles");
                });

            modelBuilder.Entity("dbdesgin.Models.UserThirdAccountBind", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("accessToken")
                        .HasMaxLength(1024);

                    b.Property<int>("accountType");

                    b.Property<long>("exipreIn");

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("nickName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasDefaultValue("");

                    b.Property<string>("thirdOpenId")
                        .HasMaxLength(1024);

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.ToTable("core_userThirdAccountBinds");
                });

            modelBuilder.Entity("dbdesgin.Models.Video", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("address");

                    b.Property<long>("commentCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<int>("complainCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<float>("coverImageHeight")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0f);

                    b.Property<string>("coverImageUrl")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<float>("coverImageWidth")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0f);

                    b.Property<float>("firstFrameHeight")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0f);

                    b.Property<string>("firstFrameUrl")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<float>("firstFrameWidth")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0f);

                    b.Property<long>("heartCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<bool>("isHiddenLocation")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualRecommend")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<float?>("latitude");

                    b.Property<string>("linkPets");

                    b.Property<int>("linkProductCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<float?>("longitude");

                    b.Property<long?>("musicId");

                    b.Property<long>("playCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<int>("recommendIndex")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("rejectMsg")
                        .HasMaxLength(512);

                    b.Property<DateTime?>("reviewTime")
                        .HasColumnName("reviewTime")
                        .HasColumnType("timestamp");

                    b.Property<long?>("reviewUserId");

                    b.Property<long>("shareCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<int>("status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<string>("tags");

                    b.Property<long>("tipCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<string>("type")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasDefaultValue("USER");

                    b.Property<long>("userId");

                    b.Property<string>("videoUrl")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("core_videos");
                });

            modelBuilder.Entity("dbdesgin.Models.VideoTipDetail", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("tipCoin");

                    b.Property<long>("userId");

                    b.Property<long>("videoId");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.HasIndex("videoId");

                    b.ToTable("core_video_videoTipDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
