// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dbdesgin.Data;

namespace dbdesgin.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("dbdesgin.Models.AppVersion", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("description")
                        .HasMaxLength(1024);

                    b.Property<string>("downloadUrl")
                        .HasMaxLength(512);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int>("platform");

                    b.Property<string>("title")
                        .HasMaxLength(50);

                    b.Property<int>("upgradeType")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("version")
                        .HasMaxLength(30);

                    b.Property<int>("versionNum");

                    b.HasKey("Id");

                    b.ToTable("core_appVersions");
                });

            modelBuilder.Entity("dbdesgin.Models.Category", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("iconUrl")
                        .HasMaxLength(512);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("orderIndex");

                    b.Property<long>("parentId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<int>("status");

                    b.Property<int>("type")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<long?>("userId");

                    b.HasKey("Id");

                    b.ToTable("core_categories");
                });

            modelBuilder.Entity("dbdesgin.Models.Comment", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("contentTxt")
                        .IsRequired()
                        .HasMaxLength(1024);

                    b.Property<long>("heartCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isOwner")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("originContentTxt")
                        .HasMaxLength(1024);

                    b.Property<long>("refCommentId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<long>("resourceOwnerId");

                    b.Property<int>("resourceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("reviewStatus")
                        .HasMaxLength(20);

                    b.Property<string>("reviewedResult")
                        .HasMaxLength(1024);

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.ToTable("core_comments");
                });

            modelBuilder.Entity("dbdesgin.Models.Complain", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("description")
                        .HasMaxLength(512);

                    b.Property<int>("fromTypeId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<long>("fromUserId");

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("reasonId");

                    b.Property<string>("snapshotUrl")
                        .HasMaxLength(512);

                    b.Property<long>("toResId");

                    b.Property<long>("toResTypeId");

                    b.HasKey("Id");

                    b.ToTable("core_complains");
                });

            modelBuilder.Entity("dbdesgin.Models.ComplainReason", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<string>("description")
                        .HasMaxLength(512);

                    b.Property<bool>("isOpen")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("title")
                        .HasMaxLength(256);

                    b.Property<int>("type");

                    b.HasKey("Id");

                    b.ToTable("core_complainReasons");
                });

            modelBuilder.Entity("dbdesgin.Models.DailyIncreaseAnalysis", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("newOrders")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<long>("newUsers")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<long>("newVideos")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.HasKey("Id");

                    b.ToTable("core_dailyIncreaseAnalysises");
                });

            modelBuilder.Entity("dbdesgin.Models.Follower", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<long>("followerUserId");

                    b.Property<bool>("isBoth")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.HasIndex("followerUserId");

                    b.HasIndex("userId");

                    b.ToTable("core_followers");
                });

            modelBuilder.Entity("dbdesgin.Models.Heart", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("resourceOwnerId");

                    b.Property<int>("resourceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.ToTable("core_hearts");
                });

            modelBuilder.Entity("dbdesgin.Models.Living", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("address")
                        .HasMaxLength(512);

                    b.Property<string>("chatRoomId")
                        .HasMaxLength(512);

                    b.Property<long>("commentCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<int>("complainCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("coverUrl")
                        .HasMaxLength(512);

                    b.Property<long>("getCoins")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<long>("getFriends")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<long>("heartCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<string>("hlsUrl")
                        .HasMaxLength(512);

                    b.Property<bool>("isLiving")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<float?>("latitude");

                    b.Property<string>("linkPets");

                    b.Property<int>("linkProductCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<long>("liveingTotalTime")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<float?>("longitude");

                    b.Property<long>("onlinePeopleCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<long>("playCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<string>("pullUrl")
                        .HasMaxLength(512);

                    b.Property<string>("pushUrl")
                        .HasMaxLength(512);

                    b.Property<int>("recommendIndex")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("rejectMsg")
                        .HasMaxLength(512);

                    b.Property<long>("shareCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<int>("status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.ToTable("core_livings");
                });

            modelBuilder.Entity("dbdesgin.Models.Message", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<long>("creatorUserId");

                    b.Property<string>("dataContent")
                        .HasMaxLength(2048);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int>("messageType")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("msgContent")
                        .IsRequired()
                        .HasMaxLength(1024);

                    b.Property<string>("refUrl")
                        .HasMaxLength(1024);

                    b.HasKey("Id");

                    b.ToTable("core_messages");
                });

            modelBuilder.Entity("dbdesgin.Models.MessageBroadcast", b =>
                {
                    b.Property<long>("receivedUserId")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("lastMessageId");

                    b.HasKey("receivedUserId");

                    b.ToTable("core_messageBroadcasts");
                });

            modelBuilder.Entity("dbdesgin.Models.MessageDispatch", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("receivedUserId");

                    b.Property<long>("refMessageId");

                    b.Property<int>("status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("core_messageDispatchs");
                });

            modelBuilder.Entity("dbdesgin.Models.Music", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("artist")
                        .HasMaxLength(30);

                    b.Property<long?>("categoryId");

                    b.Property<string>("coverUrl")
                        .HasMaxLength(512);

                    b.Property<long?>("creatorUserId");

                    b.Property<float?>("duration");

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("musicUrl")
                        .HasMaxLength(512);

                    b.Property<int>("recommendIndex")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("core_musics");
                });

            modelBuilder.Entity("dbdesgin.Models.Permission", b =>
                {
                    b.Property<string>("name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasDefaultValue("");

                    b.HasKey("name");

                    b.ToTable("core_permissions");
                });

            modelBuilder.Entity("dbdesgin.Models.Pet", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("avatar")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<DateTime>("birthday")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<long>("categoryId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("nickName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("sex")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.ToTable("core_pets");
                });

            modelBuilder.Entity("dbdesgin.Models.ResourceNeedReview", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<long>("dataId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<int>("dataType")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("resContent")
                        .HasMaxLength(512);

                    b.Property<int>("resType")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("reviewResultContent")
                        .HasMaxLength(1024);

                    b.Property<string>("reviewResultType")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("core_resourceNeedReviews");
                });

            modelBuilder.Entity("dbdesgin.Models.ResourceRefGoods", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("goods")
                        .HasMaxLength(1024);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("resourceId");

                    b.Property<int>("resourceType")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("core_resourceRefGoods");
                });

            modelBuilder.Entity("dbdesgin.Models.Role", b =>
                {
                    b.Property<string>("name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(512)
                        .HasDefaultValue("");

                    b.HasKey("name");

                    b.ToTable("core_roles");
                });

            modelBuilder.Entity("dbdesgin.Models.RolePermission", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<string>("permissionName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("core_rolePermissions");
                });

            modelBuilder.Entity("dbdesgin.Models.Tag", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("desc")
                        .HasMaxLength(1024);

                    b.Property<bool>("isHot")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("recommendIndex")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<long>("resNumber")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.HasKey("Id");

                    b.ToTable("core_tags");
                });

            modelBuilder.Entity("dbdesgin.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsEmailVerification")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isEmailVerification")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsLocked")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isLocked")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsPhoneVerification")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isPhoneVerification")
                        .HasDefaultValue(false);

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasMaxLength(512);

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasMaxLength(20);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("username")
                        .HasMaxLength(110);

                    b.Property<string>("address")
                        .HasMaxLength(512);

                    b.Property<string>("avatarUrl")
                        .HasMaxLength(512);

                    b.Property<DateTime?>("birthday")
                        .HasColumnName("birthday")
                        .HasColumnType("timestamp");

                    b.Property<int>("complainCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("hxPwd")
                        .HasMaxLength(512);

                    b.Property<string>("hxUserName")
                        .HasMaxLength(50);

                    b.Property<bool>("isLiving")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isLivingOpen")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isLivingWatch")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isManager")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isReviewed")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isSuper")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<float?>("latitude");

                    b.Property<long>("livingId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<int>("loginType")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<float?>("longitude");

                    b.Property<int>("loveStatusId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("nickName")
                        .HasMaxLength(20);

                    b.Property<int>("occupationId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<int>("sex")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("thirdOpenId")
                        .HasMaxLength(1024);

                    b.Property<long>("totalFans")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<long>("totalHearts")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<long>("totalMyFocuses")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("core_users");
                });

            modelBuilder.Entity("dbdesgin.Models.UserDeviceToken", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("deviceName")
                        .HasMaxLength(50);

                    b.Property<string>("deviceToken")
                        .HasMaxLength(512);

                    b.Property<string>("deviceType")
                        .HasMaxLength(20);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<long>("userId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.HasKey("Id");

                    b.ToTable("core_userDeviceTokens");
                });

            modelBuilder.Entity("dbdesgin.Models.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.ToTable("core_userRoles");
                });

            modelBuilder.Entity("dbdesgin.Models.UserThirdAccountBind", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("accessToken")
                        .HasMaxLength(1024);

                    b.Property<int>("accountType");

                    b.Property<long>("exipreIn");

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("nickName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasDefaultValue("");

                    b.Property<string>("thirdOpenId")
                        .HasMaxLength(1024);

                    b.Property<long>("userId");

                    b.HasKey("Id");

                    b.ToTable("core_userThirdAccountBinds");
                });

            modelBuilder.Entity("dbdesgin.Models.Video", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createTime")
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP()");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnName("deleteTime")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasDefaultValue(false);

                    b.Property<string>("address");

                    b.Property<long>("commentCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<int>("complainCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<float>("coverImageHeight")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0f);

                    b.Property<string>("coverImageUrl")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<float>("coverImageWidth")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0f);

                    b.Property<float>("firstFrameHeight")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0f);

                    b.Property<string>("firstFrameUrl")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<float>("firstFrameWidth")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0f);

                    b.Property<long>("heartCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<bool>("isHiddenLocation")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualData")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("isManualRecommend")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<float?>("latitude");

                    b.Property<string>("linkPets");

                    b.Property<int>("linkProductCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<float?>("longitude");

                    b.Property<long?>("musicId");

                    b.Property<long>("playCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<int>("recommendIndex")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("rejectMsg")
                        .HasMaxLength(512);

                    b.Property<DateTime?>("reviewTime")
                        .HasColumnName("reviewTime")
                        .HasColumnType("timestamp");

                    b.Property<long?>("reviewUserId");

                    b.Property<long>("shareCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<int>("status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<string>("tags");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.Property<long>("userId");

                    b.Property<string>("videoUrl")
                        .IsRequired()
                        .HasMaxLength(512);

                    b.HasKey("Id");

                    b.ToTable("core_videos");
                });
#pragma warning restore 612, 618
        }
    }
}
